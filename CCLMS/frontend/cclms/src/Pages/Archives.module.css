@import url('https://fonts.googleapis.com/css2?family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Special+Elite&display=swap');
  

@font-face {
  font-family: 'sofia';
  font-style: normal;
  font-weight: normal;
  src: url(./CSS/Sofia\ Pro\ Regular\ Az.otf);
}
.container { 
  max-width: 100%;
  margin: 0 auto;
  padding: 20px;
  background: 
  linear-gradient(rgba(0, 0, 0, 0.352), rgba(0, 0, 0, 0.5)), /* Dark overlay */
  url("https://wallpapers.com/images/hd/great-hall-harry-potter-desktop-1920-x-1080-wallpaper-cf25za8k4qtn7pjq.jpg") no-repeat center center; 
  background-attachment: fixed;
  font-family: 'sofia';
  min-height: 150vh;

}

.header h1{
  margin-top: 100px;
  margin-bottom: 15px;
  font-size: 5em;
  color: #f0f0f0;
  text-shadow: 0px 0px 5px #ffca57; /* Glowing yellow shadow */
  animation: glow 1.5s ease-in-out infinite;
}

@keyframes glow {
  0%, 100% {
    text-shadow: 0px 0px 5px #ffca5788, 0px 0px 10px #ffca5765, 0px 0px 15px #ffca578f;
  }
  50% {
    text-shadow: 0px 0px 10px #ffca577a, 0px 0px 15px #ffca5788, 0px 0px 20px #ffca579e;
  }
}

.cardcontainer{
  width: fit-content;
  text-align:  center;
  align-items: center;
  position: relative;
  margin: 0 auto;
}

.header {
  text-align: center;
  margin-bottom: 30px;
}

.navbar {
  background: rgba(225, 200, 200, 0.118); /* Transparent background */
  backdrop-filter: blur(10px); /* Apply blur effect for frosted glass */
  border: 1px solid rgba(255, 255, 255, 0.3); /* Light border to enhance glass effect */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Soft shadow for depth */
  color: #ae8360;
  transition: width 0.3s ease; /* Smooth expansion */
  display: flex;
  justify-content: center;
  gap: 10px;
  padding: 15px;
  border-radius: 15px;
  max-width: 600px;
  margin: 0 auto;
  
}
/* Styling for the sidebar items */
.navbar-item {
  color: white;
  padding: 15px;
  text-decoration: none;
  width: 100%;
  box-sizing: border-box;
  white-space: nowrap; /* Prevents text from wrapping */
  overflow: hidden;
  text-overflow: ellipsis; /* Adds '...' when text is cut off */
  transition: padding-left 0.3s ease; /* Smooth padding transition */
}
.navButton {
  background-color: transparent;
  padding: 10px 15px;
  border-radius: 7px;
  cursor: pointer;
  transition: 0.3s;
  font-size: 15pt;
  font-family: 'sofia';
  border: transparent solid 1px;
  color: #fffaf4;

}

.navButton.active, .navButton:hover {
  background-color: #a78350;
  color: #ffffff;
}

.searchInput {
  font-family: Sofia Pro Regular;
  padding: 16px 20px; /* Comfortable padding */
  font-size: 1rem; /* Increased size for readability */
  border-radius: 30px; /* More pronounced rounded edges */
  border: 2px solid #f0f0f0; /* Softer border color */
  text-align: center;
  margin-top: 20px; /* Spacing above */
  margin-bottom: -20px; /* Spacing above */
  transition: border-color 0.3s, box-shadow 0.3s, transform 0.3s; /* Smooth transitions */
  width: 100%; /* Full width for input */
  max-width: 600px; /* Limiting max width for better design */
  outline: none; /* Removes default outline */
}

/* Focus state for search input */
.searchInput:focus {
  border-color: #ffca57; /* Highlight border on focus */
  box-shadow: 0 0 15px rgba(255, 202, 87, 0.6); /* Soft glow on focus */
  transform: scale(1.02);  /*Slightly scale up */
}


.mainContent {
  display: grid;                                         /* Enable grid layout */
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); /* Create responsive columns */
  gap: 20px;                                           /* Set a more reasonable gap between items */
  min-height: 120vh;                                   /* Set minimum height for the content */
  padding: 20px;                                       /* Add padding around the grid for aesthetics */
  box-sizing: border-box;                              /* Include padding and border in element's total width and height */
}

.mainContent > .item {
  background: #f0f0f0;                                /* Background color for items */
  border-radius: 8px;                                 /* Rounded corners for items */
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);          /* Light shadow for depth */
  transition: transform 0.3s ease;                    /* Smooth transform for hover effects */
}

/* Optional hover effect for grid items */
.mainContent > .item:hover {
  transform: translateY(-5px);                        /* Lift effect on hover */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);         /* Darker shadow on hover */
}


.categoryTitle {
  font-size: 1.5em;
  color: #ffffff;
  cursor: pointer;
  padding: 10px;
  margin: 0;
}
.itemGrid {
  display: flex;
  flex-wrap: nowrap;                 /* Allow wrapping to keep items in multiple lines if needed */
  justify-content: center;       /* Center items within the grid */
  gap: 15px;
  min-height: 300px;
  width: 100%;           /* Full-width grid container */
  max-width: 900px;
  padding: 10px;
}

.itemsGrid .itemCard {
  width: 150px;        /* Fixed width for each card */
  flex: 0 0 auto;        /* Prevent resizing of item cards */
  transition: transform 0.4s ease, box-shadow 0.4s ease;
  color: #ffffff;
}

.itemsGrid .itemCard:hover {
  transform: translateY(-5px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.itemCard {
  width: 150px;                    /* Fixed width for each item card */
  flex-grow: 0; 
}


.modalOverlay {
  position: fixed;
  top: 0; left: 0; right: 0; bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(0, 0, 0, 0.7);
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

.modalContent {
  background:  
  linear-gradient(rgba(0, 0, 0, 0.352), rgba(0, 0, 0, 0.5)), /* Dark overlay */
  url("https://images.pond5.com/smoke-background-loop-alpha-warm-073159175_prevstill.jpeg") no-repeat center center; 
  background-attachment: fixed;
  padding:20px 20px;
  border-radius: 8px;
  max-width: 500px;
  position: relative;
  text-align: center;
  animation: slideIn 0.3s ease-in-out;
  color: #decdb9;
  min-width: 40px;
  min-height: 400px;
  
}



@keyframes fadeIn {
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(-20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}
:root {
	--shiny-cta-bg: transparent;
	--shiny-cta-bg-subtle: #b58e62;
	--shiny-cta-fg: #ffffff;
	--shiny-cta-highlight: #decdb9;
	--shiny-cta-highlight-subtle: rgb(138, 91, 78);
}

@property --gradient-angle {
	syntax: "<angle>";
	initial-value: 0deg;
	inherits: false;
}

@property --gradient-angle-offset {
	syntax: "<angle>";
	initial-value: 0deg;
	inherits: false;
}

@property --gradient-percent {
	syntax: "<percent>";
	initial-value: 5%;
	inherits: false;
}

@property --gradient-shine {
	syntax: "<color>";
	initial-value: #ffffff;
	inherits: false;
}

.closeModal {
  background:transparent;
  color: wheat;
  border: none;
  margin: 0 auto;
  cursor: pointer;
  font-family: 'sofia';
  display: flex;
	align-items: center;
  font-size: 15px;
	justify-content: center;
	--animation: gradient-angle linear infinite;
	--duration: 5s;
	--shadow-size: 2px;
	isolation: isolate;
	position: relative;
	overflow: hidden;
	cursor: pointer;
	outline-offset: 4px;
	padding: 10px 2rem;
	font-family: inherit;
	line-height: 1.2;
	border: 1px solid transparent;
	border-radius: 300px;
	color: var(--shiny-cta-fg);
	background: linear-gradient(var(--shiny-cta-bg), var(--shiny-cta-bg)) padding-box, conic-gradient(from calc(val(--gradient-angle) - var(--gradient-angle-offset)),
		transparent,
		var(--shiny-cta-highlight) var(--gradient-percent),
		var(--gradient-shine) calc(var(--gradient-percent) * 2),
		var(--shiny-cta-highlight) calc(var(--gradient-percent) * 3),
		transparent calc(var(--gradient-percent) * 4)
	) border-box;
	box-shadow: inset 0 0 0 1px var(--shiny-cta-bg-subtle);


	
	&::before,
	&::after,
	span::before {
		content: "";
		pointer-events: none;
		position: absolute;
		inset-inline-start: 50%;
		inset-block-start: 50%;
		translate: -50% -50%;
		z-index: -1;
	}

	&:active {
		translate: 0 1px;
	}
}

/*dots pattern*/
.closeModal::before {
	--size: calc(100% - var(--shadow-size) * 3);
	--position: 2px;
	--space: calc(var(--position) * 2);
	width: var(--size);
	height: var(--size);
	/* background: radial-gradient(
		circle at var(--position) var(--position),
		white calc(var(--position) / 4),
		transparent 0
	) padding-box;
	background-size: var(--space) var(--space);
	background-repeat: space;
	mask-image: conic-gradient(
		from calc(var(--gradient-angle) + 45deg),
		black,
		transparent 10% 90%,
		black
	); */
	border-radius: inherit;
	opacity: 0.4;
	z-index: -1;
}

/*inner shimmer*/
.closeModal::after {
	--animation: shimmer linear infinite;
	width: 100%;
	aspect-ratio: 1;
	background: linear-gradient(
		-50deg,
		transparent,
		var(--shiny-cta-highlight),
		transparent
	);
	mask-image: radial-gradient( circle at bottom, transparent 40%, black);
	opacity: 0.6;
}

.closeModal span {
	z-index: 1;
	&::before {
		--size: calc(100% + 1rem);
		width: var(--size);
		height: var(--size);
		box-shadow: inset 0 -1ex 2rem 4px var(--shiny-cta-highlight);
		opacity: 0;
	}
}

.closeModal {
	--transition: 800ms cubic-bazier(0.25, 1, 0.5, 1);
	transition: var(--transition);
	transition-property: --gradient-angle-offset, --gradient-percent, --gradient-shine;
	&,
	&::before,
	&::after {
		animation: var(--animation) var(--duration), var(--animation)  calc(var(--duration) / 0.4) reverse paused;
		animation-composition: add;
	}
	span::before {
		transition: opacity var(--transition);
		animation: calc(var(--duration) * 1.5) breathe linear infinite;
	}
}

.closeModal:is(:hover, :focus-visible) {
	--gradient-percent: 20%;
	--gradient-angle-offset: 95deg;
	--gradient-shine: var(--shiny-cta-highlight-subtle);

	&,
	&::before,
	&::after {
		animation-play-state: running;
	}

	span::before {
		opacity: 1;
	}
}



@keyframes gradient-angle {
	to {
		--gradient-angle: 360deg;
	}
}

@keyframes shimmer {
	to {
		rotate: 360deg;
	}
}

@keyframes breathe {
	from,
	to {
		scale: 1;
	}
	50% {
		scale: 1.2;
	}
}

.modalContent img{
  border-radius: 10px;
  width: 250px;
  height: 250px;
}
.modalContent h3{
  font-size: 30px;
  font-family: 'Libre Baskerville';
  font-style: italic;
  font-weight: normal;
  position: relative;
  line-height: 0%;
}

.playSpellButton {
  width: 150px;
  font-size: 15px;
  font-family: 'sofia';
  position: relative; /* Position relative for pseudo-elements */
  background-color: #f0c14b;
  border: 1px solid #a88734;
  color: #ffffff;
  padding: 8px 16px;
  cursor: pointer;
  margin-top: 10px;
  margin-bottom: 25px;
  border-radius: 15px;
  transition: background-color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
  overflow: hidden; /* Hide overflow for sparks */
}

.playSpellButton:hover {
  background-color: #ddb347;
  transform: scale(1.05);
  box-shadow: 0 0 20px rgba(255, 215, 0, 0.5), 0 0 30px rgba(255, 215, 0, 0.4);
}

.playSpellButton:active {
  transform: scale(0.95);
}

/* Updated Spark Effect */
.playSpellButton::before,
.playSpellButton::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none; /* Prevents mouse events */
  opacity: 0; /* Start invisible */
  border-radius: 50%; /* Rounded edges for sparks */
  animation: spark-animation 1.5s infinite; /* Infinite spark animation */
}



@keyframes spark-animation {
  0% {
    opacity: 0;
    transform: scale(0.8); /* Start smaller */
  }
  20% {
    opacity: 1;
  }
  80% {
    opacity: 1;
    transform: scale(1.1); /* Slightly enlarge */
  }
  100% {
    opacity: 0; /* Fade out */
    transform: scale(1.3); /* End larger */
  }
}


